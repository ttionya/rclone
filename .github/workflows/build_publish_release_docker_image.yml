name: Docker release build

on:
  workflow_dispatch:
  release:
    types: [published]

jobs:
  build:
    runs-on: ubuntu-latest
    name: Build image job
    steps:
      - name: Free some space
        shell: bash
        run: |
          df -h .
          # Remove android SDK
          sudo rm -rf /usr/local/lib/android || true
          # Remove .net runtime
          sudo rm -rf /usr/share/dotnet || true
          df -h .
      - name: Checkout master
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      #- name: Build and publish image
      #  uses: ilteoood/docker_buildx@1.1.0
      #  with:
      #    tag: test
      #    imageName: ttionya/rclone
      #    #platform: linux/amd64,linux/386,linux/arm64,linux/arm/v7,linux/arm/v6
      #    platform: linux/amd64,linux/386,linux/arm/v7,linux/arm/v6
      - name: Build and publish image
        uses: docker/build-push-action@v6
        with:
          file: Dockerfile
          context: .
          tags: ttionya/rclone:test
          platforms: linux/amd64,linux/386,linux/arm64,linux/arm/v7,linux/arm/v6

  build_docker_volume_plugin:
    if: github.repository == 'rclone/rclone'
    needs: build
    runs-on: ubuntu-latest
    name: Build docker plugin job
    steps:
      - name: Free some space
        shell: bash
        run: |
          df -h .
          # Remove android SDK
          sudo rm -rf /usr/local/lib/android || true
          # Remove .net runtime
          sudo rm -rf /usr/share/dotnet || true
          df -h .
      - name: Checkout master
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Build and publish docker plugin
        shell: bash
        run: |
          VER=${GITHUB_REF#refs/tags/}
          PLUGIN_USER=rclone
          docker login --username ${{ secrets.DOCKER_HUB_USER }} \
                       --password-stdin <<< "${{ secrets.DOCKER_HUB_PASSWORD }}"
          for PLUGIN_ARCH in amd64 arm64 arm/v7 arm/v6 ;do
              export PLUGIN_USER PLUGIN_ARCH
              make docker-plugin PLUGIN_TAG=${PLUGIN_ARCH/\//-}
              make docker-plugin PLUGIN_TAG=${PLUGIN_ARCH/\//-}-${VER#v}
          done
          make docker-plugin PLUGIN_ARCH=amd64 PLUGIN_TAG=latest
          make docker-plugin PLUGIN_ARCH=amd64 PLUGIN_TAG=${VER#v}
